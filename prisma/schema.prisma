// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  spotifyId    String   @unique
  displayName  String
  accessToken  String?
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  plays        Play[]
}

model Track {
  id         Int           @id @default(autoincrement())
  name       String
  durationMs Int
  spotifyId  String        @unique
  albumId    Int
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  album      Album         @relation(fields: [albumId], references: [id])
  artists    ArtistTrack[]
  plays      Play[]
}

model Play {
  id        Int      @id @default(autoincrement())
  userId    Int
  trackId   Int
  playedAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  track     Track    @relation(fields: [trackId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, trackId, playedAt])
}

model Artist {
  id        Int           @id @default(autoincrement())
  name      String
  spotifyId String        @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  tracks    ArtistTrack[]
}

model ArtistTrack {
  id        Int      @id @default(autoincrement())
  artistId  Int
  trackId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  artist    Artist   @relation(fields: [artistId], references: [id])
  track     Track    @relation(fields: [trackId], references: [id])

  @@unique([artistId, trackId])
}

model Album {
  id        Int      @id @default(autoincrement())
  name      String
  spotifyId String   @unique
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tracks    Track[]
}
